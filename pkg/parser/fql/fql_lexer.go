// Code generated from antlr/FqlLexer.g4 by ANTLR 4.9. DO NOT EDIT.

package fql

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 69, 581,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 3, 2, 3, 2, 3,
	2, 3, 2, 7, 2, 164, 10, 2, 12, 2, 14, 2, 167, 11, 2, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 7, 3, 178, 10, 3, 12, 3, 14, 3, 181,
	11, 3, 3, 3, 3, 3, 3, 4, 6, 4, 186, 10, 4, 13, 4, 14, 4, 187, 3, 4, 3,
	4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14,
	3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3,
	19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23,
	3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3,
	28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 5, 29, 253, 10, 29,
	3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 259, 10, 30, 3, 31, 3, 31, 3, 31, 3,
	32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36,
	3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3,
	38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39,
	3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3,
	40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42,
	3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3,
	44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45,
	3, 45, 5, 45, 339, 10, 45, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 47, 3,
	47, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48,
	3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3,
	48, 5, 48, 369, 10, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50,
	3, 50, 3, 50, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3, 52, 3,
	52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 54,
	3, 54, 3, 55, 3, 55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3,
	56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57,
	3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3, 59, 5, 59, 429,
	10, 59, 3, 60, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62,
	3, 62, 3, 62, 3, 62, 3, 63, 3, 63, 3, 64, 6, 64, 446, 10, 64, 13, 64, 14,
	64, 447, 3, 64, 3, 64, 7, 64, 452, 10, 64, 12, 64, 14, 64, 455, 11, 64,
	7, 64, 457, 10, 64, 12, 64, 14, 64, 460, 11, 64, 3, 64, 3, 64, 7, 64, 464,
	10, 64, 12, 64, 14, 64, 467, 11, 64, 7, 64, 469, 10, 64, 12, 64, 14, 64,
	472, 11, 64, 3, 65, 3, 65, 3, 65, 3, 65, 5, 65, 478, 10, 65, 3, 66, 6,
	66, 481, 10, 66, 13, 66, 14, 66, 482, 3, 67, 3, 67, 3, 67, 6, 67, 488,
	10, 67, 13, 67, 14, 67, 489, 3, 67, 5, 67, 493, 10, 67, 3, 67, 3, 67, 5,
	67, 497, 10, 67, 5, 67, 499, 10, 67, 3, 68, 3, 68, 3, 68, 3, 69, 3, 69,
	3, 70, 3, 70, 3, 70, 7, 70, 509, 10, 70, 12, 70, 14, 70, 512, 11, 70, 5,
	70, 514, 10, 70, 3, 71, 3, 71, 5, 71, 518, 10, 71, 3, 71, 6, 71, 521, 10,
	71, 13, 71, 14, 71, 522, 3, 72, 3, 72, 3, 73, 3, 73, 3, 74, 3, 74, 3, 75,
	3, 75, 3, 75, 3, 75, 3, 75, 3, 75, 7, 75, 537, 10, 75, 12, 75, 14, 75,
	540, 11, 75, 3, 75, 3, 75, 3, 76, 3, 76, 3, 76, 3, 76, 3, 76, 3, 76, 7,
	76, 550, 10, 76, 12, 76, 14, 76, 553, 11, 76, 3, 76, 3, 76, 3, 77, 3, 77,
	3, 77, 3, 77, 7, 77, 561, 10, 77, 12, 77, 14, 77, 564, 11, 77, 3, 77, 3,
	77, 3, 78, 3, 78, 3, 78, 3, 78, 7, 78, 572, 10, 78, 12, 78, 14, 78, 575,
	11, 78, 3, 78, 3, 78, 3, 79, 3, 79, 3, 79, 3, 165, 2, 80, 3, 3, 5, 4, 7,
	5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45,
	24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63,
	33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81,
	42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99,
	51, 101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 57, 113, 58, 115,
	59, 117, 60, 119, 61, 121, 62, 123, 63, 125, 64, 127, 65, 129, 66, 131,
	67, 133, 68, 135, 69, 137, 2, 139, 2, 141, 2, 143, 2, 145, 2, 147, 2, 149,
	2, 151, 2, 153, 2, 155, 2, 157, 2, 3, 2, 14, 5, 2, 12, 12, 15, 15, 8234,
	8235, 6, 2, 11, 11, 13, 14, 34, 34, 162, 162, 3, 2, 50, 59, 5, 2, 50, 59,
	67, 72, 99, 104, 3, 2, 51, 59, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47,
	47, 4, 2, 67, 92, 99, 124, 4, 2, 36, 36, 94, 94, 4, 2, 41, 41, 94, 94,
	3, 2, 98, 98, 3, 2, 182, 182, 2, 606, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2,
	2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2,
	2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3,
	2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75,
	3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2,
	83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2,
	2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2,
	2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3,
	2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2,
	113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3, 2,
	2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2, 2, 127,
	3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2, 2, 2,
	2, 135, 3, 2, 2, 2, 3, 159, 3, 2, 2, 2, 5, 173, 3, 2, 2, 2, 7, 185, 3,
	2, 2, 2, 9, 191, 3, 2, 2, 2, 11, 195, 3, 2, 2, 2, 13, 197, 3, 2, 2, 2,
	15, 199, 3, 2, 2, 2, 17, 201, 3, 2, 2, 2, 19, 203, 3, 2, 2, 2, 21, 205,
	3, 2, 2, 2, 23, 207, 3, 2, 2, 2, 25, 209, 3, 2, 2, 2, 27, 211, 3, 2, 2,
	2, 29, 213, 3, 2, 2, 2, 31, 215, 3, 2, 2, 2, 33, 217, 3, 2, 2, 2, 35, 219,
	3, 2, 2, 2, 37, 222, 3, 2, 2, 2, 39, 225, 3, 2, 2, 2, 41, 228, 3, 2, 2,
	2, 43, 231, 3, 2, 2, 2, 45, 233, 3, 2, 2, 2, 47, 235, 3, 2, 2, 2, 49, 237,
	3, 2, 2, 2, 51, 239, 3, 2, 2, 2, 53, 241, 3, 2, 2, 2, 55, 244, 3, 2, 2,
	2, 57, 252, 3, 2, 2, 2, 59, 258, 3, 2, 2, 2, 61, 260, 3, 2, 2, 2, 63, 263,
	3, 2, 2, 2, 65, 265, 3, 2, 2, 2, 67, 267, 3, 2, 2, 2, 69, 270, 3, 2, 2,
	2, 71, 273, 3, 2, 2, 2, 73, 277, 3, 2, 2, 2, 75, 284, 3, 2, 2, 2, 77, 292,
	3, 2, 2, 2, 79, 301, 3, 2, 2, 2, 81, 308, 3, 2, 2, 2, 83, 313, 3, 2, 2,
	2, 85, 319, 3, 2, 2, 2, 87, 323, 3, 2, 2, 2, 89, 338, 3, 2, 2, 2, 91, 340,
	3, 2, 2, 2, 93, 345, 3, 2, 2, 2, 95, 368, 3, 2, 2, 2, 97, 370, 3, 2, 2,
	2, 99, 374, 3, 2, 2, 2, 101, 379, 3, 2, 2, 2, 103, 384, 3, 2, 2, 2, 105,
	389, 3, 2, 2, 2, 107, 395, 3, 2, 2, 2, 109, 399, 3, 2, 2, 2, 111, 403,
	3, 2, 2, 2, 113, 413, 3, 2, 2, 2, 115, 419, 3, 2, 2, 2, 117, 428, 3, 2,
	2, 2, 119, 430, 3, 2, 2, 2, 121, 433, 3, 2, 2, 2, 123, 436, 3, 2, 2, 2,
	125, 442, 3, 2, 2, 2, 127, 445, 3, 2, 2, 2, 129, 477, 3, 2, 2, 2, 131,
	480, 3, 2, 2, 2, 133, 498, 3, 2, 2, 2, 135, 500, 3, 2, 2, 2, 137, 503,
	3, 2, 2, 2, 139, 513, 3, 2, 2, 2, 141, 515, 3, 2, 2, 2, 143, 524, 3, 2,
	2, 2, 145, 526, 3, 2, 2, 2, 147, 528, 3, 2, 2, 2, 149, 530, 3, 2, 2, 2,
	151, 543, 3, 2, 2, 2, 153, 556, 3, 2, 2, 2, 155, 567, 3, 2, 2, 2, 157,
	578, 3, 2, 2, 2, 159, 160, 7, 49, 2, 2, 160, 161, 7, 44, 2, 2, 161, 165,
	3, 2, 2, 2, 162, 164, 11, 2, 2, 2, 163, 162, 3, 2, 2, 2, 164, 167, 3, 2,
	2, 2, 165, 166, 3, 2, 2, 2, 165, 163, 3, 2, 2, 2, 166, 168, 3, 2, 2, 2,
	167, 165, 3, 2, 2, 2, 168, 169, 7, 44, 2, 2, 169, 170, 7, 49, 2, 2, 170,
	171, 3, 2, 2, 2, 171, 172, 8, 2, 2, 2, 172, 4, 3, 2, 2, 2, 173, 174, 7,
	49, 2, 2, 174, 175, 7, 49, 2, 2, 175, 179, 3, 2, 2, 2, 176, 178, 10, 2,
	2, 2, 177, 176, 3, 2, 2, 2, 178, 181, 3, 2, 2, 2, 179, 177, 3, 2, 2, 2,
	179, 180, 3, 2, 2, 2, 180, 182, 3, 2, 2, 2, 181, 179, 3, 2, 2, 2, 182,
	183, 8, 3, 2, 2, 183, 6, 3, 2, 2, 2, 184, 186, 9, 3, 2, 2, 185, 184, 3,
	2, 2, 2, 186, 187, 3, 2, 2, 2, 187, 185, 3, 2, 2, 2, 187, 188, 3, 2, 2,
	2, 188, 189, 3, 2, 2, 2, 189, 190, 8, 4, 2, 2, 190, 8, 3, 2, 2, 2, 191,
	192, 9, 2, 2, 2, 192, 193, 3, 2, 2, 2, 193, 194, 8, 5, 2, 2, 194, 10, 3,
	2, 2, 2, 195, 196, 7, 60, 2, 2, 196, 12, 3, 2, 2, 2, 197, 198, 7, 61, 2,
	2, 198, 14, 3, 2, 2, 2, 199, 200, 7, 48, 2, 2, 200, 16, 3, 2, 2, 2, 201,
	202, 7, 46, 2, 2, 202, 18, 3, 2, 2, 2, 203, 204, 7, 93, 2, 2, 204, 20,
	3, 2, 2, 2, 205, 206, 7, 95, 2, 2, 206, 22, 3, 2, 2, 2, 207, 208, 7, 42,
	2, 2, 208, 24, 3, 2, 2, 2, 209, 210, 7, 43, 2, 2, 210, 26, 3, 2, 2, 2,
	211, 212, 7, 125, 2, 2, 212, 28, 3, 2, 2, 2, 213, 214, 7, 127, 2, 2, 214,
	30, 3, 2, 2, 2, 215, 216, 7, 64, 2, 2, 216, 32, 3, 2, 2, 2, 217, 218, 7,
	62, 2, 2, 218, 34, 3, 2, 2, 2, 219, 220, 7, 63, 2, 2, 220, 221, 7, 63,
	2, 2, 221, 36, 3, 2, 2, 2, 222, 223, 7, 64, 2, 2, 223, 224, 7, 63, 2, 2,
	224, 38, 3, 2, 2, 2, 225, 226, 7, 62, 2, 2, 226, 227, 7, 63, 2, 2, 227,
	40, 3, 2, 2, 2, 228, 229, 7, 35, 2, 2, 229, 230, 7, 63, 2, 2, 230, 42,
	3, 2, 2, 2, 231, 232, 7, 44, 2, 2, 232, 44, 3, 2, 2, 2, 233, 234, 7, 49,
	2, 2, 234, 46, 3, 2, 2, 2, 235, 236, 7, 39, 2, 2, 236, 48, 3, 2, 2, 2,
	237, 238, 7, 45, 2, 2, 238, 50, 3, 2, 2, 2, 239, 240, 7, 47, 2, 2, 240,
	52, 3, 2, 2, 2, 241, 242, 7, 47, 2, 2, 242, 243, 7, 47, 2, 2, 243, 54,
	3, 2, 2, 2, 244, 245, 7, 45, 2, 2, 245, 246, 7, 45, 2, 2, 246, 56, 3, 2,
	2, 2, 247, 248, 7, 67, 2, 2, 248, 249, 7, 80, 2, 2, 249, 253, 7, 70, 2,
	2, 250, 251, 7, 40, 2, 2, 251, 253, 7, 40, 2, 2, 252, 247, 3, 2, 2, 2,
	252, 250, 3, 2, 2, 2, 253, 58, 3, 2, 2, 2, 254, 255, 7, 81, 2, 2, 255,
	259, 7, 84, 2, 2, 256, 257, 7, 126, 2, 2, 257, 259, 7, 126, 2, 2, 258,
	254, 3, 2, 2, 2, 258, 256, 3, 2, 2, 2, 259, 60, 3, 2, 2, 2, 260, 261, 5,
	15, 8, 2, 261, 262, 5, 15, 8, 2, 262, 62, 3, 2, 2, 2, 263, 264, 7, 63,
	2, 2, 264, 64, 3, 2, 2, 2, 265, 266, 7, 65, 2, 2, 266, 66, 3, 2, 2, 2,
	267, 268, 7, 35, 2, 2, 268, 269, 7, 128, 2, 2, 269, 68, 3, 2, 2, 2, 270,
	271, 7, 63, 2, 2, 271, 272, 7, 128, 2, 2, 272, 70, 3, 2, 2, 2, 273, 274,
	7, 72, 2, 2, 274, 275, 7, 81, 2, 2, 275, 276, 7, 84, 2, 2, 276, 72, 3,
	2, 2, 2, 277, 278, 7, 84, 2, 2, 278, 279, 7, 71, 2, 2, 279, 280, 7, 86,
	2, 2, 280, 281, 7, 87, 2, 2, 281, 282, 7, 84, 2, 2, 282, 283, 7, 80, 2,
	2, 283, 74, 3, 2, 2, 2, 284, 285, 7, 89, 2, 2, 285, 286, 7, 67, 2, 2, 286,
	287, 7, 75, 2, 2, 287, 288, 7, 86, 2, 2, 288, 289, 7, 72, 2, 2, 289, 290,
	7, 81, 2, 2, 290, 291, 7, 84, 2, 2, 291, 76, 3, 2, 2, 2, 292, 293, 7, 70,
	2, 2, 293, 294, 7, 75, 2, 2, 294, 295, 7, 85, 2, 2, 295, 296, 7, 86, 2,
	2, 296, 297, 7, 75, 2, 2, 297, 298, 7, 80, 2, 2, 298, 299, 7, 69, 2, 2,
	299, 300, 7, 86, 2, 2, 300, 78, 3, 2, 2, 2, 301, 302, 7, 72, 2, 2, 302,
	303, 7, 75, 2, 2, 303, 304, 7, 78, 2, 2, 304, 305, 7, 86, 2, 2, 305, 306,
	7, 71, 2, 2, 306, 307, 7, 84, 2, 2, 307, 80, 3, 2, 2, 2, 308, 309, 7, 85,
	2, 2, 309, 310, 7, 81, 2, 2, 310, 311, 7, 84, 2, 2, 311, 312, 7, 86, 2,
	2, 312, 82, 3, 2, 2, 2, 313, 314, 7, 78, 2, 2, 314, 315, 7, 75, 2, 2, 315,
	316, 7, 79, 2, 2, 316, 317, 7, 75, 2, 2, 317, 318, 7, 86, 2, 2, 318, 84,
	3, 2, 2, 2, 319, 320, 7, 78, 2, 2, 320, 321, 7, 71, 2, 2, 321, 322, 7,
	86, 2, 2, 322, 86, 3, 2, 2, 2, 323, 324, 7, 69, 2, 2, 324, 325, 7, 81,
	2, 2, 325, 326, 7, 78, 2, 2, 326, 327, 7, 78, 2, 2, 327, 328, 7, 71, 2,
	2, 328, 329, 7, 69, 2, 2, 329, 330, 7, 86, 2, 2, 330, 88, 3, 2, 2, 2, 331,
	332, 7, 67, 2, 2, 332, 333, 7, 85, 2, 2, 333, 339, 7, 69, 2, 2, 334, 335,
	7, 70, 2, 2, 335, 336, 7, 71, 2, 2, 336, 337, 7, 85, 2, 2, 337, 339, 7,
	69, 2, 2, 338, 331, 3, 2, 2, 2, 338, 334, 3, 2, 2, 2, 339, 90, 3, 2, 2,
	2, 340, 341, 7, 80, 2, 2, 341, 342, 7, 81, 2, 2, 342, 343, 7, 80, 2, 2,
	343, 344, 7, 71, 2, 2, 344, 92, 3, 2, 2, 2, 345, 346, 7, 80, 2, 2, 346,
	347, 7, 87, 2, 2, 347, 348, 7, 78, 2, 2, 348, 349, 7, 78, 2, 2, 349, 94,
	3, 2, 2, 2, 350, 351, 7, 86, 2, 2, 351, 352, 7, 84, 2, 2, 352, 353, 7,
	87, 2, 2, 353, 369, 7, 71, 2, 2, 354, 355, 7, 118, 2, 2, 355, 356, 7, 116,
	2, 2, 356, 357, 7, 119, 2, 2, 357, 369, 7, 103, 2, 2, 358, 359, 7, 72,
	2, 2, 359, 360, 7, 67, 2, 2, 360, 361, 7, 78, 2, 2, 361, 362, 7, 85, 2,
	2, 362, 369, 7, 71, 2, 2, 363, 364, 7, 104, 2, 2, 364, 365, 7, 99, 2, 2,
	365, 366, 7, 110, 2, 2, 366, 367, 7, 117, 2, 2, 367, 369, 7, 103, 2, 2,
	368, 350, 3, 2, 2, 2, 368, 354, 3, 2, 2, 2, 368, 358, 3, 2, 2, 2, 368,
	363, 3, 2, 2, 2, 369, 96, 3, 2, 2, 2, 370, 371, 7, 87, 2, 2, 371, 372,
	7, 85, 2, 2, 372, 373, 7, 71, 2, 2, 373, 98, 3, 2, 2, 2, 374, 375, 7, 75,
	2, 2, 375, 376, 7, 80, 2, 2, 376, 377, 7, 86, 2, 2, 377, 378, 7, 81, 2,
	2, 378, 100, 3, 2, 2, 2, 379, 380, 7, 77, 2, 2, 380, 381, 7, 71, 2, 2,
	381, 382, 7, 71, 2, 2, 382, 383, 7, 82, 2, 2, 383, 102, 3, 2, 2, 2, 384,
	385, 7, 89, 2, 2, 385, 386, 7, 75, 2, 2, 386, 387, 7, 86, 2, 2, 387, 388,
	7, 74, 2, 2, 388, 104, 3, 2, 2, 2, 389, 390, 7, 69, 2, 2, 390, 391, 7,
	81, 2, 2, 391, 392, 7, 87, 2, 2, 392, 393, 7, 80, 2, 2, 393, 394, 7, 86,
	2, 2, 394, 106, 3, 2, 2, 2, 395, 396, 7, 67, 2, 2, 396, 397, 7, 78, 2,
	2, 397, 398, 7, 78, 2, 2, 398, 108, 3, 2, 2, 2, 399, 400, 7, 67, 2, 2,
	400, 401, 7, 80, 2, 2, 401, 402, 7, 91, 2, 2, 402, 110, 3, 2, 2, 2, 403,
	404, 7, 67, 2, 2, 404, 405, 7, 73, 2, 2, 405, 406, 7, 73, 2, 2, 406, 407,
	7, 84, 2, 2, 407, 408, 7, 71, 2, 2, 408, 409, 7, 73, 2, 2, 409, 410, 7,
	67, 2, 2, 410, 411, 7, 86, 2, 2, 411, 412, 7, 71, 2, 2, 412, 112, 3, 2,
	2, 2, 413, 414, 7, 71, 2, 2, 414, 415, 7, 88, 2, 2, 415, 416, 7, 71, 2,
	2, 416, 417, 7, 80, 2, 2, 417, 418, 7, 86, 2, 2, 418, 114, 3, 2, 2, 2,
	419, 420, 7, 78, 2, 2, 420, 421, 7, 75, 2, 2, 421, 422, 7, 77, 2, 2, 422,
	423, 7, 71, 2, 2, 423, 116, 3, 2, 2, 2, 424, 425, 7, 80, 2, 2, 425, 426,
	7, 81, 2, 2, 426, 429, 7, 86, 2, 2, 427, 429, 7, 35, 2, 2, 428, 424, 3,
	2, 2, 2, 428, 427, 3, 2, 2, 2, 429, 118, 3, 2, 2, 2, 430, 431, 7, 75, 2,
	2, 431, 432, 7, 80, 2, 2, 432, 120, 3, 2, 2, 2, 433, 434, 7, 70, 2, 2,
	434, 435, 7, 81, 2, 2, 435, 122, 3, 2, 2, 2, 436, 437, 7, 89, 2, 2, 437,
	438, 7, 74, 2, 2, 438, 439, 7, 75, 2, 2, 439, 440, 7, 78, 2, 2, 440, 441,
	7, 71, 2, 2, 441, 124, 3, 2, 2, 2, 442, 443, 7, 66, 2, 2, 443, 126, 3,
	2, 2, 2, 444, 446, 5, 143, 72, 2, 445, 444, 3, 2, 2, 2, 446, 447, 3, 2,
	2, 2, 447, 445, 3, 2, 2, 2, 447, 448, 3, 2, 2, 2, 448, 458, 3, 2, 2, 2,
	449, 453, 5, 145, 73, 2, 450, 452, 5, 127, 64, 2, 451, 450, 3, 2, 2, 2,
	452, 455, 3, 2, 2, 2, 453, 451, 3, 2, 2, 2, 453, 454, 3, 2, 2, 2, 454,
	457, 3, 2, 2, 2, 455, 453, 3, 2, 2, 2, 456, 449, 3, 2, 2, 2, 457, 460,
	3, 2, 2, 2, 458, 456, 3, 2, 2, 2, 458, 459, 3, 2, 2, 2, 459, 470, 3, 2,
	2, 2, 460, 458, 3, 2, 2, 2, 461, 465, 5, 147, 74, 2, 462, 464, 5, 127,
	64, 2, 463, 462, 3, 2, 2, 2, 464, 467, 3, 2, 2, 2, 465, 463, 3, 2, 2, 2,
	465, 466, 3, 2, 2, 2, 466, 469, 3, 2, 2, 2, 467, 465, 3, 2, 2, 2, 468,
	461, 3, 2, 2, 2, 469, 472, 3, 2, 2, 2, 470, 468, 3, 2, 2, 2, 470, 471,
	3, 2, 2, 2, 471, 128, 3, 2, 2, 2, 472, 470, 3, 2, 2, 2, 473, 478, 5, 151,
	76, 2, 474, 478, 5, 149, 75, 2, 475, 478, 5, 153, 77, 2, 476, 478, 5, 155,
	78, 2, 477, 473, 3, 2, 2, 2, 477, 474, 3, 2, 2, 2, 477, 475, 3, 2, 2, 2,
	477, 476, 3, 2, 2, 2, 478, 130, 3, 2, 2, 2, 479, 481, 9, 4, 2, 2, 480,
	479, 3, 2, 2, 2, 481, 482, 3, 2, 2, 2, 482, 480, 3, 2, 2, 2, 482, 483,
	3, 2, 2, 2, 483, 132, 3, 2, 2, 2, 484, 485, 5, 139, 70, 2, 485, 487, 5,
	15, 8, 2, 486, 488, 9, 4, 2, 2, 487, 486, 3, 2, 2, 2, 488, 489, 3, 2, 2,
	2, 489, 487, 3, 2, 2, 2, 489, 490, 3, 2, 2, 2, 490, 492, 3, 2, 2, 2, 491,
	493, 5, 141, 71, 2, 492, 491, 3, 2, 2, 2, 492, 493, 3, 2, 2, 2, 493, 499,
	3, 2, 2, 2, 494, 496, 5, 139, 70, 2, 495, 497, 5, 141, 71, 2, 496, 495,
	3, 2, 2, 2, 496, 497, 3, 2, 2, 2, 497, 499, 3, 2, 2, 2, 498, 484, 3, 2,
	2, 2, 498, 494, 3, 2, 2, 2, 499, 134, 3, 2, 2, 2, 500, 501, 5, 127, 64,
	2, 501, 502, 5, 157, 79, 2, 502, 136, 3, 2, 2, 2, 503, 504, 9, 5, 2, 2,
	504, 138, 3, 2, 2, 2, 505, 514, 7, 50, 2, 2, 506, 510, 9, 6, 2, 2, 507,
	509, 9, 4, 2, 2, 508, 507, 3, 2, 2, 2, 509, 512, 3, 2, 2, 2, 510, 508,
	3, 2, 2, 2, 510, 511, 3, 2, 2, 2, 511, 514, 3, 2, 2, 2, 512, 510, 3, 2,
	2, 2, 513, 505, 3, 2, 2, 2, 513, 506, 3, 2, 2, 2, 514, 140, 3, 2, 2, 2,
	515, 517, 9, 7, 2, 2, 516, 518, 9, 8, 2, 2, 517, 516, 3, 2, 2, 2, 517,
	518, 3, 2, 2, 2, 518, 520, 3, 2, 2, 2, 519, 521, 9, 4, 2, 2, 520, 519,
	3, 2, 2, 2, 521, 522, 3, 2, 2, 2, 522, 520, 3, 2, 2, 2, 522, 523, 3, 2,
	2, 2, 523, 142, 3, 2, 2, 2, 524, 525, 9, 9, 2, 2, 525, 144, 3, 2, 2, 2,
	526, 527, 7, 97, 2, 2, 527, 146, 3, 2, 2, 2, 528, 529, 4, 50, 59, 2, 529,
	148, 3, 2, 2, 2, 530, 538, 7, 36, 2, 2, 531, 532, 7, 94, 2, 2, 532, 537,
	11, 2, 2, 2, 533, 534, 7, 36, 2, 2, 534, 537, 7, 36, 2, 2, 535, 537, 10,
	10, 2, 2, 536, 531, 3, 2, 2, 2, 536, 533, 3, 2, 2, 2, 536, 535, 3, 2, 2,
	2, 537, 540, 3, 2, 2, 2, 538, 536, 3, 2, 2, 2, 538, 539, 3, 2, 2, 2, 539,
	541, 3, 2, 2, 2, 540, 538, 3, 2, 2, 2, 541, 542, 7, 36, 2, 2, 542, 150,
	3, 2, 2, 2, 543, 551, 7, 41, 2, 2, 544, 545, 7, 94, 2, 2, 545, 550, 11,
	2, 2, 2, 546, 547, 7, 41, 2, 2, 547, 550, 7, 41, 2, 2, 548, 550, 10, 11,
	2, 2, 549, 544, 3, 2, 2, 2, 549, 546, 3, 2, 2, 2, 549, 548, 3, 2, 2, 2,
	550, 553, 3, 2, 2, 2, 551, 549, 3, 2, 2, 2, 551, 552, 3, 2, 2, 2, 552,
	554, 3, 2, 2, 2, 553, 551, 3, 2, 2, 2, 554, 555, 7, 41, 2, 2, 555, 152,
	3, 2, 2, 2, 556, 562, 7, 98, 2, 2, 557, 558, 7, 94, 2, 2, 558, 561, 7,
	98, 2, 2, 559, 561, 10, 12, 2, 2, 560, 557, 3, 2, 2, 2, 560, 559, 3, 2,
	2, 2, 561, 564, 3, 2, 2, 2, 562, 560, 3, 2, 2, 2, 562, 563, 3, 2, 2, 2,
	563, 565, 3, 2, 2, 2, 564, 562, 3, 2, 2, 2, 565, 566, 7, 98, 2, 2, 566,
	154, 3, 2, 2, 2, 567, 573, 7, 182, 2, 2, 568, 569, 7, 94, 2, 2, 569, 572,
	7, 182, 2, 2, 570, 572, 10, 13, 2, 2, 571, 568, 3, 2, 2, 2, 571, 570, 3,
	2, 2, 2, 572, 575, 3, 2, 2, 2, 573, 571, 3, 2, 2, 2, 573, 574, 3, 2, 2,
	2, 574, 576, 3, 2, 2, 2, 575, 573, 3, 2, 2, 2, 576, 577, 7, 182, 2, 2,
	577, 156, 3, 2, 2, 2, 578, 579, 7, 60, 2, 2, 579, 580, 7, 60, 2, 2, 580,
	158, 3, 2, 2, 2, 34, 2, 165, 179, 187, 252, 258, 338, 368, 428, 447, 453,
	458, 465, 470, 477, 482, 489, 492, 496, 498, 510, 513, 517, 522, 536, 538,
	549, 551, 560, 562, 571, 573, 3, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "':'", "';'", "'.'", "','", "'['", "']'", "'('", "')'",
	"'{'", "'}'", "'>'", "'<'", "'=='", "'>='", "'<='", "'!='", "'*'", "'/'",
	"'%'", "'+'", "'-'", "'--'", "'++'", "", "", "", "'='", "'?'", "'!~'",
	"'=~'", "'FOR'", "'RETURN'", "'WAITFOR'", "'DISTINCT'", "'FILTER'", "'SORT'",
	"'LIMIT'", "'LET'", "'COLLECT'", "", "'NONE'", "'NULL'", "", "'USE'", "'INTO'",
	"'KEEP'", "'WITH'", "'COUNT'", "'ALL'", "'ANY'", "'AGGREGATE'", "'EVENT'",
	"'LIKE'", "", "'IN'", "'DO'", "'WHILE'", "'@'",
}

var lexerSymbolicNames = []string{
	"", "MultiLineComment", "SingleLineComment", "WhiteSpaces", "LineTerminator",
	"Colon", "SemiColon", "Dot", "Comma", "OpenBracket", "CloseBracket", "OpenParen",
	"CloseParen", "OpenBrace", "CloseBrace", "Gt", "Lt", "Eq", "Gte", "Lte",
	"Neq", "Multi", "Div", "Mod", "Plus", "Minus", "MinusMinus", "PlusPlus",
	"And", "Or", "Range", "Assign", "QuestionMark", "RegexNotMatch", "RegexMatch",
	"For", "Return", "Waitfor", "Distinct", "Filter", "Sort", "Limit", "Let",
	"Collect", "SortDirection", "None", "Null", "BooleanLiteral", "Use", "Into",
	"Keep", "With", "Count", "All", "Any", "Aggregate", "Event", "Like", "Not",
	"In", "Do", "While", "Param", "Identifier", "StringLiteral", "IntegerLiteral",
	"FloatLiteral", "NamespaceSegment",
}

var lexerRuleNames = []string{
	"MultiLineComment", "SingleLineComment", "WhiteSpaces", "LineTerminator",
	"Colon", "SemiColon", "Dot", "Comma", "OpenBracket", "CloseBracket", "OpenParen",
	"CloseParen", "OpenBrace", "CloseBrace", "Gt", "Lt", "Eq", "Gte", "Lte",
	"Neq", "Multi", "Div", "Mod", "Plus", "Minus", "MinusMinus", "PlusPlus",
	"And", "Or", "Range", "Assign", "QuestionMark", "RegexNotMatch", "RegexMatch",
	"For", "Return", "Waitfor", "Distinct", "Filter", "Sort", "Limit", "Let",
	"Collect", "SortDirection", "None", "Null", "BooleanLiteral", "Use", "Into",
	"Keep", "With", "Count", "All", "Any", "Aggregate", "Event", "Like", "Not",
	"In", "Do", "While", "Param", "Identifier", "StringLiteral", "IntegerLiteral",
	"FloatLiteral", "NamespaceSegment", "HexDigit", "DecimalIntegerLiteral",
	"ExponentPart", "Letter", "Symbols", "Digit", "DQSring", "SQString", "BacktickString",
	"TickString", "NamespaceSeparator",
}

type FqlLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewFqlLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *FqlLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewFqlLexer(input antlr.CharStream) *FqlLexer {
	l := new(FqlLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FqlLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FqlLexer tokens.
const (
	FqlLexerMultiLineComment  = 1
	FqlLexerSingleLineComment = 2
	FqlLexerWhiteSpaces       = 3
	FqlLexerLineTerminator    = 4
	FqlLexerColon             = 5
	FqlLexerSemiColon         = 6
	FqlLexerDot               = 7
	FqlLexerComma             = 8
	FqlLexerOpenBracket       = 9
	FqlLexerCloseBracket      = 10
	FqlLexerOpenParen         = 11
	FqlLexerCloseParen        = 12
	FqlLexerOpenBrace         = 13
	FqlLexerCloseBrace        = 14
	FqlLexerGt                = 15
	FqlLexerLt                = 16
	FqlLexerEq                = 17
	FqlLexerGte               = 18
	FqlLexerLte               = 19
	FqlLexerNeq               = 20
	FqlLexerMulti             = 21
	FqlLexerDiv               = 22
	FqlLexerMod               = 23
	FqlLexerPlus              = 24
	FqlLexerMinus             = 25
	FqlLexerMinusMinus        = 26
	FqlLexerPlusPlus          = 27
	FqlLexerAnd               = 28
	FqlLexerOr                = 29
	FqlLexerRange             = 30
	FqlLexerAssign            = 31
	FqlLexerQuestionMark      = 32
	FqlLexerRegexNotMatch     = 33
	FqlLexerRegexMatch        = 34
	FqlLexerFor               = 35
	FqlLexerReturn            = 36
	FqlLexerWaitfor           = 37
	FqlLexerDistinct          = 38
	FqlLexerFilter            = 39
	FqlLexerSort              = 40
	FqlLexerLimit             = 41
	FqlLexerLet               = 42
	FqlLexerCollect           = 43
	FqlLexerSortDirection     = 44
	FqlLexerNone              = 45
	FqlLexerNull              = 46
	FqlLexerBooleanLiteral    = 47
	FqlLexerUse               = 48
	FqlLexerInto              = 49
	FqlLexerKeep              = 50
	FqlLexerWith              = 51
	FqlLexerCount             = 52
	FqlLexerAll               = 53
	FqlLexerAny               = 54
	FqlLexerAggregate         = 55
	FqlLexerEvent             = 56
	FqlLexerLike              = 57
	FqlLexerNot               = 58
	FqlLexerIn                = 59
	FqlLexerDo                = 60
	FqlLexerWhile             = 61
	FqlLexerParam             = 62
	FqlLexerIdentifier        = 63
	FqlLexerStringLiteral     = 64
	FqlLexerIntegerLiteral    = 65
	FqlLexerFloatLiteral      = 66
	FqlLexerNamespaceSegment  = 67
)
